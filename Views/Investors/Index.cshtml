@model IEnumerable<ApartmentsRUS.Models.Investor>
@using Microsoft.AspNet.Identity;
@using ApartmentsRUS.Models;
@using ApartmentsRUS.DAL;
@{
    ViewBag.Title = "Investors";
}
<div class="well well-sm">
    <h2>Investors</h2>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.building.street)*@
            Address
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.owner.firstName)*@
            Owner
        </th>
        <th>
            @Html.DisplayNameFor(model => model.purchaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.purchasePrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.percentOwnership)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.salePrice)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.building.street)*@
                @Html.DisplayFor(modelItem => item.building.buildingAddress)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.owner.firstName)*@
                @Html.DisplayFor(modelItem => item.owner.fullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.purchaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.purchasePrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.percentOwnership)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.saleDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.salePrice)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.investorID })
                @{
                    Context db = new Context();
                    Guid memberId;
                    Guid.TryParse(User.Identity.GetUserId(), out memberId);
                    RegisteredUser loggedInUser = db.registeredUsers.Find(memberId);
                    if (loggedInUser != null) // need to check if we found a user
                    {
                        bool isAdmin = loggedInUser.role == RegisteredUser.roles.admin;
                        bool isOwner = loggedInUser.role == RegisteredUser.roles.owner;
                        if (isAdmin || isOwner)
                        {
                            <a href="/investors/edit/@item.investorID"> | Edit </a>
                            <a href="/investors/delete/@item.investorID"> | Delete </a>
                        }
                    }
                }

                @*|
                @Html.ActionLink("Details", "Details", new { id = item.investorID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.investorID })*@
            </td>
        </tr>
    }

</table>
