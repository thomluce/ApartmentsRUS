@model ApartmentsRUS.Models.RegisteredUser
@using Microsoft.AspNet.Identity;
@using ApartmentsRUS.Models;
@using ApartmentsRUS.DAL;

@{
    ViewBag.Title = "Edit Registered User";
}
<div class="alert alert-warning">
    <h2>Edit Registered User</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.registrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registrationDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.registrationDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        Context db = new Context();
        Guid memberId;
        Guid.TryParse(User.Identity.GetUserId(), out memberId);
        RegisteredUser loggedInUser = db.registeredUsers.Find(memberId);
        if (loggedInUser != null) // need to check if we found a user
        {
            bool isAdmin = loggedInUser.role == RegisteredUser.roles.admin;
            if (isAdmin)
            {


                <div class="form-group">
                    @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.role, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {

                @Html.HiddenFor(model => model.role, new { Value = @Model.role })
            }
        }
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
